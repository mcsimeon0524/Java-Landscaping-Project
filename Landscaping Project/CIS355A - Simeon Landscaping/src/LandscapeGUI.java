
import java.sql.*;
import java.net.URL;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
/**
 *
 * @author Mat
 */
public class LandscapeGUI extends javax.swing.JFrame
{

    //class level references
    DefaultListModel<Customer> customerList = new DefaultListModel();
    private final double GRASS_PER_SQFT = 5.00;
    private final double GRAVEL_PER_SQFT = 2.00;

    /**
     * Creates new form LandscapeGUI
     */
    public LandscapeGUI()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        btgYardType = new javax.swing.ButtonGroup();
        tabMain = new javax.swing.JTabbedPane();
        pnlWelcome = new javax.swing.JPanel();
        lblNameLandscapes3 = new javax.swing.JLabel();
        lblGrassOrGravel = new javax.swing.JLabel();
        lblGrassCost = new javax.swing.JLabel();
        lblGravelCost = new javax.swing.JLabel();
        btnNext = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();
        rdoGrass = new javax.swing.JRadioButton();
        rdoGravel = new javax.swing.JRadioButton();
        lblImage = new javax.swing.JLabel();
        pnlInformation = new javax.swing.JPanel();
        lblNameLandscapes2 = new javax.swing.JLabel();
        btnSubmitOrder = new javax.swing.JButton();
        lblEnterInfo = new javax.swing.JLabel();
        lblOrderSummary = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txaOrderInfo = new javax.swing.JTextArea();
        btnCalculate = new javax.swing.JButton();
        lblName = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        lblEnterLengthWidth = new javax.swing.JLabel();
        lblLength = new javax.swing.JLabel();
        lblWidth = new javax.swing.JLabel();
        txtLength = new javax.swing.JTextField();
        txtWidth = new javax.swing.JTextField();
        pnlCustomerList = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstCustomers = new javax.swing.JList<>();
        lblNameLandscapes = new javax.swing.JLabel();
        lblCustomerList = new javax.swing.JLabel();
        lblCustomerDetails = new javax.swing.JLabel();
        btnLoad = new javax.swing.JButton();
        brnDelete = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaCustomerInfo = new javax.swing.JTextArea();
        mnbMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mniExit = new javax.swing.JMenuItem();
        mnuOrder = new javax.swing.JMenu();
        mniSubmitOrder = new javax.swing.JMenuItem();
        mniReset = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        tabMain.setAlignmentX(0.0F);

        lblNameLandscapes3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblNameLandscapes3.setText("Melchor Simeon Landscapes");

        lblGrassOrGravel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblGrassOrGravel.setText("Would you like a grass or gravel yard?");

        lblGrassCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGrassCost.setText("$5 per sqft");

        lblGravelCost.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGravelCost.setText("$2 per sqft");

        btnNext.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnNext.setText("Next");
        btnNext.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnNextActionPerformed(evt);
            }
        });

        btnReset.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnResetActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGrass);
        rdoGrass.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoGrass.setText("Grass");
        rdoGrass.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rdoGrassActionPerformed(evt);
            }
        });

        btgYardType.add(rdoGravel);
        rdoGravel.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        rdoGravel.setText("Gravel");
        rdoGravel.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                rdoGravelActionPerformed(evt);
            }
        });

        lblImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dirt.jpg"))); // NOI18N

        javax.swing.GroupLayout pnlWelcomeLayout = new javax.swing.GroupLayout(pnlWelcome);
        pnlWelcome.setLayout(pnlWelcomeLayout);
        pnlWelcomeLayout.setHorizontalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlWelcomeLayout.createSequentialGroup()
                .addContainerGap(180, Short.MAX_VALUE)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNameLandscapes3)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(lblGrassOrGravel))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 303, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblGrassCost)
                                    .addComponent(rdoGrass))
                                .addGap(118, 118, 118)
                                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(lblGravelCost)
                                    .addComponent(rdoGravel))))
                        .addGap(54, 54, 54)
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(61, 61, 61))
        );
        pnlWelcomeLayout.setVerticalGroup(
            pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlWelcomeLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addComponent(btnNext, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlWelcomeLayout.createSequentialGroup()
                        .addComponent(lblNameLandscapes3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblGrassOrGravel)
                        .addGap(18, 18, 18)
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdoGrass)
                            .addComponent(rdoGravel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlWelcomeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblGrassCost)
                            .addComponent(lblGravelCost))
                        .addGap(27, 27, 27)
                        .addComponent(lblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        tabMain.addTab("Welcome", pnlWelcome);

        lblNameLandscapes2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblNameLandscapes2.setText("Melchor Simeon Landscapes");

        btnSubmitOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnSubmitOrder.setText("Submit Order");
        btnSubmitOrder.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnSubmitOrderActionPerformed(evt);
            }
        });

        lblEnterInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEnterInfo.setText("Please enter your information:");

        lblOrderSummary.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblOrderSummary.setText("Order Summary:");

        txaOrderInfo.setColumns(15);
        txaOrderInfo.setRows(5);
        jScrollPane3.setViewportView(txaOrderInfo);

        btnCalculate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnCalculate.setText("Calculate");
        btnCalculate.setNextFocusableComponent(btnSubmitOrder);
        btnCalculate.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnCalculateActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblName.setText("Name:");

        lblAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblAddress.setText("Address:");

        txtName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtName.setFocusCycleRoot(true);
        txtName.setNextFocusableComponent(txtAddress);

        txtAddress.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtAddress.setNextFocusableComponent(txtLength);

        lblEnterLengthWidth.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblEnterLengthWidth.setText("Enter the length and width of your yard:");

        lblLength.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblLength.setText("Length (ft.):");

        lblWidth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblWidth.setText("Width (ft.):");

        txtLength.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtLength.setNextFocusableComponent(txtWidth);

        txtWidth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtWidth.setNextFocusableComponent(btnCalculate);

        javax.swing.GroupLayout pnlInformationLayout = new javax.swing.GroupLayout(pnlInformation);
        pnlInformation.setLayout(pnlInformationLayout);
        pnlInformationLayout.setHorizontalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblEnterInfo)
                                .addGroup(pnlInformationLayout.createSequentialGroup()
                                    .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblName)
                                        .addComponent(lblAddress))
                                    .addGap(54, 54, 54)
                                    .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtName)
                                        .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addComponent(lblEnterLengthWidth))
                            .addGroup(pnlInformationLayout.createSequentialGroup()
                                .addComponent(lblLength)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlInformationLayout.createSequentialGroup()
                                        .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(36, 36, 36)
                                        .addComponent(lblWidth)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(pnlInformationLayout.createSequentialGroup()
                                        .addGap(27, 27, 27)
                                        .addComponent(btnCalculate)))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                                .addComponent(lblOrderSummary)
                                .addGap(34, 34, 34))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                                .addComponent(btnSubmitOrder)
                                .addGap(30, 30, 30))
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlInformationLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lblNameLandscapes2)
                        .addGap(122, 122, 122)))
                .addGap(36, 36, 36))
        );
        pnlInformationLayout.setVerticalGroup(
            pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlInformationLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lblNameLandscapes2)
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEnterInfo)
                    .addComponent(lblOrderSummary))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlInformationLayout.createSequentialGroup()
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAddress)
                            .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addComponent(lblEnterLengthWidth)
                        .addGap(18, 18, 18)
                        .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblLength)
                            .addComponent(txtLength, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblWidth)
                            .addComponent(txtWidth, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlInformationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSubmitOrder)
                    .addComponent(btnCalculate))
                .addContainerGap(44, Short.MAX_VALUE))
        );

        tabMain.addTab("Information", pnlInformation);

        lstCustomers.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lstCustomers.setModel(customerList);
        lstCustomers.addListSelectionListener(new javax.swing.event.ListSelectionListener()
        {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt)
            {
                lstCustomersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstCustomers);

        lblNameLandscapes.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblNameLandscapes.setText("Melchor Simeon Landscapes");

        lblCustomerList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCustomerList.setText("Customer List");

        lblCustomerDetails.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lblCustomerDetails.setText("Customer Details");

        btnLoad.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        btnLoad.setText("Load List");
        btnLoad.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnLoadActionPerformed(evt);
            }
        });

        brnDelete.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        brnDelete.setText("Delete Customer");
        brnDelete.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                brnDeleteActionPerformed(evt);
            }
        });

        txaCustomerInfo.setColumns(20);
        txaCustomerInfo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txaCustomerInfo.setRows(5);
        jScrollPane2.setViewportView(txaCustomerInfo);

        javax.swing.GroupLayout pnlCustomerListLayout = new javax.swing.GroupLayout(pnlCustomerList);
        pnlCustomerList.setLayout(pnlCustomerListLayout);
        pnlCustomerListLayout.setHorizontalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCustomerListLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblNameLandscapes)
                .addGap(159, 159, 159))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(btnLoad)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(brnDelete)
                .addGap(91, 91, 91))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 108, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37))
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(82, 82, 82)
                .addComponent(lblCustomerList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblCustomerDetails)
                .addGap(121, 121, 121))
        );
        pnlCustomerListLayout.setVerticalGroup(
            pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCustomerListLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(lblNameLandscapes)
                .addGap(43, 43, 43)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCustomerDetails)
                    .addComponent(lblCustomerList))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addGroup(pnlCustomerListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLoad)
                    .addComponent(brnDelete))
                .addGap(39, 39, 39))
        );

        tabMain.addTab("Customer List", pnlCustomerList);

        mnuFile.setText("File");

        mniExit.setText("Exit");
        mniExit.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mniExitActionPerformed(evt);
            }
        });
        mnuFile.add(mniExit);

        mnbMain.add(mnuFile);

        mnuOrder.setText("Order");

        mniSubmitOrder.setText("Submit Order");
        mniSubmitOrder.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mniSubmitOrderActionPerformed(evt);
            }
        });
        mnuOrder.add(mniSubmitOrder);

        mniReset.setText("Reset");
        mniReset.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                mniResetActionPerformed(evt);
            }
        });
        mnuOrder.add(mniReset);

        mnbMain.add(mnuOrder);

        setJMenuBar(mnbMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabMain)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mniExitActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mniExitActionPerformed
    {//GEN-HEADEREND:event_mniExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_mniExitActionPerformed

    private void mniSubmitOrderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mniSubmitOrderActionPerformed
    {//GEN-HEADEREND:event_mniSubmitOrderActionPerformed
        submitOrder();
    }//GEN-LAST:event_mniSubmitOrderActionPerformed

    private void mniResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_mniResetActionPerformed
    {//GEN-HEADEREND:event_mniResetActionPerformed
        reset();
    }//GEN-LAST:event_mniResetActionPerformed

    private void btnNextActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnNextActionPerformed
    {//GEN-HEADEREND:event_btnNextActionPerformed
        //Confirm that a selection was made then move to the next tab
        if (rdoGrass.isSelected() == false && rdoGravel.isSelected() == false)
        {
            JOptionPane.showMessageDialog(this, "Please select the type of yard.", "Error", JOptionPane.ERROR_MESSAGE);
        } else
        {
            tabMain.setSelectedIndex(1);
        }

    }//GEN-LAST:event_btnNextActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnResetActionPerformed
    {//GEN-HEADEREND:event_btnResetActionPerformed
        reset();
    }//GEN-LAST:event_btnResetActionPerformed

    private void rdoGrassActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rdoGrassActionPerformed
    {//GEN-HEADEREND:event_rdoGrassActionPerformed
        if (rdoGrass.isSelected())
        {
            //look in directory where class exists, and get the location of "grass.jpg"
            URL location = this.getClass().getResource("grass.jpg");

            // create image using the location of the "grass.jpg"
            ImageIcon icon = new ImageIcon(location);

            // set the image icon to the label.
            lblImage.setIcon(icon);
        }
    }//GEN-LAST:event_rdoGrassActionPerformed

    private void rdoGravelActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_rdoGravelActionPerformed
    {//GEN-HEADEREND:event_rdoGravelActionPerformed
        if (rdoGravel.isSelected())
        {
            //look in directory where class exists, and get the location of "grass.jpg"
            URL location = this.getClass().getResource("gravel.jpg");

            // create image using the location of the "gravel.jpg"
            ImageIcon icon = new ImageIcon(location);

            // set the image icon to the label.
            lblImage.setIcon(icon);
        }
    }//GEN-LAST:event_rdoGravelActionPerformed

    private void btnSubmitOrderActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnSubmitOrderActionPerformed
    {//GEN-HEADEREND:event_btnSubmitOrderActionPerformed
      submitOrder();
    }//GEN-LAST:event_btnSubmitOrderActionPerformed

    private void btnCalculateActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnCalculateActionPerformed
    {//GEN-HEADEREND:event_btnCalculateActionPerformed
        //validate the inputs
        if (validateInputs() == false)
        {
            return; // end the method if validation failed
        }
        Customer cust = createCustomer();
        txaOrderInfo.setText(cust.getDetails());
    }//GEN-LAST:event_btnCalculateActionPerformed

    private void btnLoadActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnLoadActionPerformed
    {//GEN-HEADEREND:event_btnLoadActionPerformed
        loadCustomers();
    }//GEN-LAST:event_btnLoadActionPerformed

    private void brnDeleteActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_brnDeleteActionPerformed
    {//GEN-HEADEREND:event_brnDeleteActionPerformed
        try
        {
            // get the selected object
            Customer old = lstCustomers.getSelectedValue();

            // if something is selected, delete it and clear the details textarea
            if (old != null)
            {
                DataIO data = new DataIO();
                data.delete(old.getCustomerID());   // get the ID only
                txaCustomerInfo.setText("");
                loadCustomers();
            }
        } catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_brnDeleteActionPerformed

    private void lstCustomersValueChanged(javax.swing.event.ListSelectionEvent evt)//GEN-FIRST:event_lstCustomersValueChanged
    {//GEN-HEADEREND:event_lstCustomersValueChanged
        // get selected item's index number
        int index = lstCustomers.getSelectedIndex();

        // if something was selected, show the object's details
        if (index > -1)
        {
            Customer cust = customerList.getElementAt(index);
            txaCustomerInfo.setText(cust.getDetails());
        }
    }//GEN-LAST:event_lstCustomersValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(LandscapeGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new LandscapeGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnDelete;
    private javax.swing.ButtonGroup btgYardType;
    private javax.swing.JButton btnCalculate;
    private javax.swing.JButton btnLoad;
    private javax.swing.JButton btnNext;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSubmitOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCustomerDetails;
    private javax.swing.JLabel lblCustomerList;
    private javax.swing.JLabel lblEnterInfo;
    private javax.swing.JLabel lblEnterLengthWidth;
    private javax.swing.JLabel lblGrassCost;
    private javax.swing.JLabel lblGrassOrGravel;
    private javax.swing.JLabel lblGravelCost;
    private javax.swing.JLabel lblImage;
    private javax.swing.JLabel lblLength;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNameLandscapes;
    private javax.swing.JLabel lblNameLandscapes2;
    private javax.swing.JLabel lblNameLandscapes3;
    private javax.swing.JLabel lblOrderSummary;
    private javax.swing.JLabel lblWidth;
    private javax.swing.JList<Customer> lstCustomers;
    private javax.swing.JMenuBar mnbMain;
    private javax.swing.JMenuItem mniExit;
    private javax.swing.JMenuItem mniReset;
    private javax.swing.JMenuItem mniSubmitOrder;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenu mnuOrder;
    private javax.swing.JPanel pnlCustomerList;
    private javax.swing.JPanel pnlInformation;
    private javax.swing.JPanel pnlWelcome;
    private javax.swing.JRadioButton rdoGrass;
    private javax.swing.JRadioButton rdoGravel;
    private javax.swing.JTabbedPane tabMain;
    private javax.swing.JTextArea txaCustomerInfo;
    private javax.swing.JTextArea txaOrderInfo;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtLength;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtWidth;
    // End of variables declaration//GEN-END:variables

    private void reset()
    {
        tabMain.setSelectedIndex(0);

        // clear the radiobutton selection
        btgYardType.clearSelection();
        //put the image back to "Dirt"
        lblImage.setIcon(new ImageIcon(this.getClass().getResource("dirt.jpg")));
        txtName.setText("");
        this.txtName.requestFocusInWindow();
        txtAddress.setText("");
        txtLength.setText("");
        txtWidth.setText("");
        txaOrderInfo.setText("");
    }

    private boolean validateInputs()
    {
        //get inputs from user using textboxes
        String sName = txtName.getText();
        String sAddress = txtAddress.getText();
        String sWidth = txtWidth.getText();
        String sLength = txtLength.getText();

        // confirm that a radiobutton has been selected
        if (btgYardType.getSelection() == null)
        {
            JOptionPane.showMessageDialog(this, "Error. Please select the type of yard.", "Error", JOptionPane.ERROR_MESSAGE);
            return false;
        }

        //make sure we have a name for the order
        if (sName.isBlank())
        {
            JOptionPane.showMessageDialog(this, "Enter a name", "Name Error", JOptionPane.ERROR_MESSAGE);
            txtName.requestFocusInWindow();
            return false;
        }

        //make sure we have an address for the order
        if (sAddress.isBlank())
        {
            JOptionPane.showMessageDialog(this, "Enter an Address", "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        //check if address entered has 6 or more characters
        if (sAddress.length() < 6)
        {
            JOptionPane.showMessageDialog(this, "Address must be six characters or more.", "Address Error", JOptionPane.ERROR_MESSAGE);
            txtAddress.requestFocusInWindow();
            return false;
        }

        //make sure we have a preferred width for the order
        if (sWidth.isBlank())
        {
            JOptionPane.showMessageDialog(this, "Enter desired Width", "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.requestFocusInWindow();
            return false;
        }

        //check to see if entered width is a valid number
        try
        {
            Double.parseDouble(sWidth);
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Width must be a number", "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.setText("");
            txtWidth.requestFocusInWindow();
            return false;
        }

        //check to see if entered width is greater than 0
        if (Double.parseDouble(sWidth) <= 0)
        {
            JOptionPane.showMessageDialog(this, "Width must be greater than 0", "Width Error", JOptionPane.ERROR_MESSAGE);
            txtWidth.setText("");
            txtWidth.requestFocusInWindow();
            return false;
        }

        //make sure we have a preferred length for the order
        if (sLength.isBlank())
        {
            JOptionPane.showMessageDialog(this, "Enter desired Length", "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.requestFocusInWindow();
            return false;
        }

        //check to see if entered length is a valid number
        try
        {
            Double.parseDouble(sLength);
        } catch (NumberFormatException e)
        {
            JOptionPane.showMessageDialog(this, "Length must be a number", "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        //check to see if entered length is greater than 0
        if (Double.parseDouble(sLength) <= 0)
        {
            JOptionPane.showMessageDialog(this, "Length must be greater than 0", "Length Error", JOptionPane.ERROR_MESSAGE);
            txtLength.setText("");
            txtLength.requestFocusInWindow();
            return false;
        }

        //if all is good then return true
        return true;
    }

    private Customer createCustomer()
    {
        String name = txtName.getText();
        String address = txtAddress.getText();
        double width = Double.parseDouble(txtWidth.getText());
        double length = Double.parseDouble(txtLength.getText());
        String yardType = "";
        double totalCost = 0.0;

        if (rdoGrass.isSelected())
        {
            yardType = "Grass";
            totalCost = GRASS_PER_SQFT * width * length;
        } else if (rdoGravel.isSelected())
        {
            yardType = "Gravel";
            totalCost = GRAVEL_PER_SQFT * width * length;
        } else
        {
            JOptionPane.showMessageDialog(this, "Error. Please select a yard type");
            totalCost = 0.0;
        }

        Customer cust = new Customer(0, name, address, yardType, length, width, totalCost);
        return cust;
    }

    private void submitOrder()
    {
        if (validateInputs() == false)
        {
            return; //end the method if validation failed
        }

        Customer cust = createCustomer();
        customerList.addElement(cust);
        txaOrderInfo.setText(cust.getDetails());

        try
        {
            DataIO data = new DataIO();
            data.add(cust);
            loadCustomers(); // load all customers

            //reset for the next customer
            reset();

            //move to the client orders tab
            tabMain.setSelectedIndex(2);
        } catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }
        catch (ClassNotFoundException ex)
        {
            JOptionPane.showMessageDialog(this, "Driver Not Found Error: " + ex.getMessage(),
                    "Database Driver Error", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void loadCustomers()
    {
        try
        {
            DataIO data = new DataIO(); // create DataIO object
            ArrayList<Customer> customers = data.getList();

            // clear out the DefaultListModel and textarea
            customerList.clear();
            txaOrderInfo.setText("");

            // copy each object from the ArrayList over to the DefaultListModel
            for (int i = 0; i < customers.size(); i++)
            {
                customerList.addElement(customers.get(i));
            }
        } catch (SQLException ex)
        {
            JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage(),
                    "Database Error", JOptionPane.ERROR_MESSAGE);
        } 
    }
}
